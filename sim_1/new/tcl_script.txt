// 1_UB_TB.txt
set fp [open 1_UB_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    puts $fp [get_value -radix hex "/SA0/UB/bram[$i]"]
}
close $fp

// 2_WB_TB.txt
set fp [open 2_WB_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    puts $fp [get_value -radix hex "/SA0/WB/bram[$i]"]
}
close $fp

// 4_DATA_FIFO_TB.txt
set fp [open 4_DATA_FIFO_TB.txt w]
for {set i 0} {$i < 4} {incr i} {
    puts $fp [get_value -radix hex "/SA0/DATA_FIFO/fifo[$i]"]
}
close $fp

// 5_MMU_TB.txt
set fp [open 5_MMU_TB.txt w]
for {set i 0} {$i < 16} {incr i} {
    set result ""
    for {set j 15} {$j >= 0} {incr j -1} {
	    append result [get_value -radix hex "/SA0/MMU/\\genblk1[$i]\.genblk1[$j]\.genblk1\.PE0 /weight"]
    }
	puts $fp "$result"
}
close $fp

// 5_WEIGHT_FIFO.txt
set fp [open 5_WEIGHT_FIFO_TB.txt w]
for {set i 0} {$i < 4} {incr i} {
    puts $fp [get_value -radix hex "/SA0/WEIGHT_FIFO/fifo[$i]"]
}
close $fp

// 6_ACC_TB.txt
set fp [open 6_ACC_TB.txt w]
for {set i 0} {$i < 16} {incr i} {
    puts $fp [get_value -radix hex "/SA0/ACC/bram[$i]"]
}
close $fp

// 8_OFF_MEM_TB.txt (AXI4 Lite)
set fp [open 8_OFF_MEM_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    puts $fp [get_value -radix hex "/OM0/OFF_MEM_BRAM/bram[$i]"]
}
close $fp

// 8_OFF_MEM_TB.txt (AXI4 Full)
set fp [open 8_OFF_MEM_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    set result ""
    for {set j 15} {$j >= 0} {incr j -1} {
        append result [get_value -radix hex "/S00/inst/myip_SA_AXI4_Slave_v1_0_S00_AXI_inst/\\BRAM_GEN[0]\.BYTE_BRAM_GEN[$j]\.byte_ram [$i]"]
    }
    puts $fp "$result"
}
close $fp


// 9_ACC.txt
set fp [open 9_ACC_TB.txt w]
for {set i 0} {$i < 16} {incr i} {
    puts $fp [get_value -radix hex "/SA0/ACC/bram[$i]"]
}
close $fp

// 10_UB.txt
set fp [open 10_UB_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    puts $fp [get_value -radix hex "/SA0/UB/bram[$i]"]
}
close $fp

// 11_OFF_MEM.txt (AXI4 Lite)
set fp [open 11_OFF_MEM_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    puts $fp [get_value -radix hex "/OM0/OFF_MEM_BRAM/bram[$i]"]
}
close $fp

// 11_OFF_MEM.txt (AXI4 Full)
set fp [open 11_OFF_MEM_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    set result ""
    for {set j 15} {$j >= 0} {incr j -1} {
        append result [get_value -radix hex "/S00/inst/myip_SA_AXI4_Slave_v1_0_S00_AXI_inst/\\BRAM_GEN[0]\.BYTE_BRAM_GEN[$j]\.byte_ram [$i]"]
    }
    puts $fp "$result"
}
close $fp

// AXI VIP
set fp [open Q_VIP_OFF_MEM_TB.txt w]
for {set i 0} {$i < 256} {incr i} {
    set result ""
    append result [get_value -radix hex "/DUT/SA_smartconnect_TB_i/blk_mem_gen_0/inst/\\native_mem_mapped_module\.blk_mem_gen_v8_4_4_inst /memory[$i]"]
    puts $fp "$result"
}
close $fp